version: '3.8'

# 创建共享网络
networks:
  app-network:
    driver: bridge

services:
  seckill-dotnet:
    image: ${DOCKER_REGISTRY-}seckilldotnet
    build:
      context: .
      dockerfile: Seckill-dotnet/Dockerfile
    ports:
    - "8080:8080"
    - "5000:5000"
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
      redislock:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Redis__DefaultConnection=redis:6379,password=123456 # 分隔符必须使用双下划线
      - Redis__RedlockEndpoints__0=redis:6379,password=123456
      - Redis__RedlockEndpoints__1=redislock:6380,password=123456
      - Redis__RedlockSettings__RetryCount=5
      - Redis__RedlockSettings__ExpiryTime=300
      - Redis__RedlockSettings__WaitTime=200
      - Redis__RedlockSettings__RetryDelay=50
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__QueueName=seckill_orders
      - ConnectionStrings__DefaultConnection=Server=mysql;Database=seckilldb;User=admin;Password=123456

  # Redis 服务定义
  redis: 
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=123456
    command: redis-server --requirepass $${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  # Redis2 服务定义
  redislock: 
    image: redis:latest
    container_name: redislock
    ports:
      - "6380:6380"
    networks:
      - app-network
    volumes:
      - redislock-data:/data
    environment:
      - REDIS_PASSWORD=123456
    command: redis-server --requirepass $${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # rabbitmq 服务定义
  rabbitmq:
    image: rabbitmq:4.1.2-management-alpine
    container_name: rabbitmq
    ports:
    - "15671:15671" # 管理界面端口
    - "15672:15672"
    - "5671:5671" # AMQP 端口
    - "5672:5672"
    networks:
      - app-network
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MySQL 服务
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
      - "33060:33060" # MySQL X Protocol 端口" 
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: seckilldb
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123456
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d # 初始化脚本目录
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

# 数据卷定义
volumes:
  redis-data:
  redislock-data:
  rabbitmq-data:
  mysql-data:
